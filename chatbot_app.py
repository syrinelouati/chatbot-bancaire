# -*- coding: utf-8 -*-
"""chatbot_app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LfmGKAnJHXg1qZyR79f1FqyeZ2qLZTpj
"""

import pandas as pd
from sentence_transformers import SentenceTransformer
from sklearn.neighbors import NearestNeighbors
import streamlit as st
import os
os.environ["STREAMLIT_WATCHER_TYPE"] = "none"

# Titre
st.title("ü§ñ Chatbot Bancaire Multilingue")

# Charger les donn√©es
@st.cache_data
def load_data():
    df = pd.read_csv("cleanedTranslatedBankFAQs.csv")
    df["full_question"] = df["Profile"].fillna('') + " - " + df["Question"].fillna('')
    return df

df = load_data()

# Encoder les questions
@st.cache_resource
def build_model_and_embeddings(df):
    model = SentenceTransformer("paraphrase-multilingual-MiniLM-L12-v2")
    embeddings = model.encode(df["full_question"].tolist(), show_progress_bar=True)
    nn_model = NearestNeighbors(n_neighbors=1, metric="cosine")
    nn_model.fit(embeddings)
    return model, nn_model, embeddings

model, nn_model, question_embeddings = build_model_and_embeddings(df)

# Interface utilisateur
user_profile = st.text_input("üë§ Entrez votre profil (client, agent, etc.)")
user_question = st.text_area("‚ùì Posez votre question bancaire")

if st.button("Obtenir la r√©ponse"):
    if user_question and user_profile:
        input_text = user_profile + " - " + user_question
        input_embedding = model.encode([input_text])
        distance, index = nn_model.kneighbors(input_embedding)

        response = df.iloc[index[0][0]]["Answer"]
        classe = df.iloc[index[0][0]]["Class"]

        st.success(f"**R√©ponse** : {response}")
        st.info(f"üìÇ **Class** : {class}")
    else:
        st.warning("‚ö†Ô∏è Veuillez fournir votre profil et votre question.")
